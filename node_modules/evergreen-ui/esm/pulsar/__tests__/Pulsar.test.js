import _extends from "@babel/runtime/helpers/esm/extends";
import React from 'react';
import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import { mockRef } from '../../test/utils';
import { Tooltip } from '../../tooltip';
import { Pulsar } from '../src/Pulsar';

var makePulsarFixture = function makePulsarFixture() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return /*#__PURE__*/React.createElement(Pulsar, _extends({
    "data-testid": "Pulsar"
  }, props));
};

makePulsarFixture.displayName = "makePulsarFixture";
describe('Pulsar', function () {
  it('should forward ref', function () {
    var ref = mockRef();
    render(makePulsarFixture({
      ref: ref
    }));
    expect(ref.current).toBeInstanceOf(HTMLDivElement);
  });
  it('should forward box props', function () {
    var backgroundColor = 'red';
    render(makePulsarFixture({
      backgroundColor: backgroundColor
    }));
    expect(screen.getByTestId('Pulsar')).toHaveStyle({
      backgroundColor: backgroundColor
    });
  });
  it('should render Tooltip when wrapped and hovered', function () {
    render( /*#__PURE__*/React.createElement(Tooltip, {
      content: "Hello world"
    }, makePulsarFixture()));
    userEvent.hover(screen.getByTestId('Pulsar'));
    expect(screen.getByText('Hello world')).toBeInTheDocument();
  });
});