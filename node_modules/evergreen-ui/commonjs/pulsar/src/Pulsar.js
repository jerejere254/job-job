"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pulsar = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireWildcard(require("ui-box"));

var _Position = _interopRequireDefault(require("../../constants/src/Position"));

var _layers = require("../../layers");

var _scales = require("../../scales");

var _theme = require("../../theme");

var _excluded = ["position", "size", "onClick"];

var _POSITION_KEYS;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var pulseAnimation = (0, _uiBox.keyframes)('pulseAnimation', {
  0: {
    transform: 'scale(1)'
  },
  50: {
    transform: 'scale(1.9)'
  },
  100: {
    transform: 'scale(1)'
  }
});
var animationTiming = 'cubic-bezier(0, 0, 0.58, 1)';
var animationDuration = '1.8s';
var pulsarAnimationStyles = {
  animation: "".concat(pulseAnimation, " ").concat(animationDuration, " ").concat(animationTiming, " both infinite")
};
var POSITION_KEYS = (_POSITION_KEYS = {}, (0, _defineProperty2["default"])(_POSITION_KEYS, _Position["default"].TOP_LEFT, ['top', 'left']), (0, _defineProperty2["default"])(_POSITION_KEYS, _Position["default"].TOP_RIGHT, ['top', 'right']), (0, _defineProperty2["default"])(_POSITION_KEYS, _Position["default"].BOTTOM_LEFT, ['bottom', 'left']), (0, _defineProperty2["default"])(_POSITION_KEYS, _Position["default"].BOTTOM_RIGHT, ['bottom', 'right']), _POSITION_KEYS);

var getPositionProps = function getPositionProps(_ref) {
  var position = _ref.position,
      size = _ref.size;
  var keys = POSITION_KEYS[position];
  var props = {};
  keys.forEach(function (key) {
    var isYAxisKey = key === 'top' || key === 'bottom';

    if (isYAxisKey) {
      props[key] = -(size / 2);
    } else {
      props[key] = -size;
    }
  });
  return props;
};

var Pulsar = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function (_ref2, ref) {
  var _ref2$position = _ref2.position,
      position = _ref2$position === void 0 ? _Position["default"].TOP_RIGHT : _ref2$position,
      _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? (0, _scales.majorScale)(1) : _ref2$size,
      onClick = _ref2.onClick,
      rest = (0, _objectWithoutProperties2["default"])(_ref2, _excluded);

  var _useTheme = (0, _theme.useTheme)(),
      colors = _useTheme.colors;

  var positionProps = getPositionProps({
    position: position,
    size: size
  });
  var outerPadding = size * 0.25;
  return /*#__PURE__*/_react["default"].createElement(_layers.Pane, (0, _extends2["default"])({
    ref: ref,
    position: "absolute",
    borderRadius: "50%",
    backgroundColor: colors.blue100,
    boxSizing: "content-box",
    opacity: 0.7,
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    padding: outerPadding
  }, pulsarAnimationStyles, {
    onClick: onClick,
    cursor: onClick ? 'pointer' : undefined
  }, positionProps, rest), /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    width: size,
    height: size,
    backgroundColor: colors.blue200,
    borderRadius: "50%",
    opacity: 0.7
  }));
}));
exports.Pulsar = Pulsar;
Pulsar.propTypes = _objectSpread(_objectSpread({}, _uiBox["default"].propTypes), {}, {
  /**
   * The position of the pulsar
   */
  position: _propTypes["default"].oneOf([_Position["default"].TOP_LEFT, _Position["default"].TOP_RIGHT, _Position["default"].BOTTOM_LEFT, _Position["default"].BOTTOM_RIGHT]),

  /**
   * The width/height of the dot
   */
  size: _propTypes["default"].number
});